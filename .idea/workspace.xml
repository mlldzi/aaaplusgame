<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="65ea61e0-bec7-4b1d-b492-5271ae5f3e02" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/game/visual/stars.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game/enemy/enemies_spawning.py" beforeDir="false" afterPath="$PROJECT_DIR$/game/enemy/enemies_spawning.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game/enemy/enemy.py" beforeDir="false" afterPath="$PROJECT_DIR$/game/enemy/enemy.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game/functions.py" beforeDir="false" afterPath="$PROJECT_DIR$/game/functions.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game/game.py" beforeDir="false" afterPath="$PROJECT_DIR$/game/game.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/game/stars.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/game/visual/render.py" beforeDir="false" afterPath="$PROJECT_DIR$/game/visual/render.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="LogFilters">
    <option name="FILTER_ERRORS" value="false" />
    <option name="FILTER_WARNINGS" value="false" />
    <option name="FILTER_INFO" value="true" />
    <option name="FILTER_DEBUG" value="true" />
    <option name="CUSTOM_FILTER" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2ZG0BgQQwyx5tx3d2b8aN8BLqL7" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "C:/Users/tereh/OneDrive/Рабочий стол/vampsurv",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="moin" type="PythonConfigurationType" factoryName="Python">
      <module name="aaagame" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.11 (aaagame)" />
      <option name="WORKING_DIRECTORY" value="C:\Users\tereh\OneDrive\Рабочий стол\aaagame" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="65ea61e0-bec7-4b1d-b492-5271ae5f3e02" name="Changes" comment="" />
      <created>1702032984697</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1702032984697</updated>
      <workItem from="1702032986207" duration="5471000" />
      <workItem from="1702080549489" duration="2224000" />
      <workItem from="1702085277374" duration="146000" />
      <workItem from="1702253469013" duration="258000" />
      <workItem from="1702375129626" duration="2689000" />
      <workItem from="1702422178924" duration="1000" />
      <workItem from="1702517227778" duration="64000" />
      <workItem from="1702548988962" duration="1113000" />
      <workItem from="1702685913427" duration="3894000" />
      <workItem from="1702799560983" duration="4241000" />
      <workItem from="1702804491864" duration="27000" />
      <workItem from="1702807213429" duration="388000" />
      <workItem from="1702807913653" duration="198000" />
      <workItem from="1702982249441" duration="10546000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="com.github.evgenys91.machinet.common.dslhistory.DslHistoryState">
    <option name="historyDtoById">
      <map>
        <entry key="299760">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
              <option name="id" value="299760" />
              <option name="initiateTms" value="1702992891526" />
              <option name="request" value="это понятно у меня вопрос скорее был в том что эти даныне нужны в файле functions но при этом мне бы не хотелось оставлять этот код здесь " />
              <option name="response" value="" />
              <option name="responseDescription" value="Если вы не хотите оставлять код, содержащий данные о типах врагов, в файле `functions.py`, вы можете вынести этот код в отдельный файл и импортировать его в `functions.py`. Это позволит вам разделить код на более модульные части и улучшить организацию проекта.&#10;&#10;Вот как вы можете это сделать:&#10;&#10;1. Создайте новый файл, например `enemy_types.py`, и переместите в него код, содержащий данные о типах врагов:&#10;&#10;```python&#10;enemy_types = {&#10;    &quot;EnemyType1&quot;: {&#10;        &quot;size&quot;: 40,&#10;        &quot;speed&quot;: 5,&#10;        &quot;spawn_x&quot;: 1000,&#10;        &quot;spawn_y&quot;: 1000&#10;    },&#10;    &quot;EnemyType2&quot;: {&#10;        &quot;size&quot;: 20,&#10;        &quot;speed&quot;: 3,&#10;        &quot;spawn_x&quot;: 0,&#10;        &quot;spawn_y&quot;: 750&#10;    }&#10;}&#10;```&#10;&#10;2. В файле `functions.py` добавьте следующую строку в начало файла, чтобы импортировать данные о типах врагов:&#10;&#10;```python&#10;from enemy_types import enemy_types&#10;```&#10;&#10;Теперь вы можете использовать переменную `enemy_types` в файле `functions.py`, как если бы она была определена непосредственно в этом файле. Это позволит вам использовать данные о типах врагов в функциях, определенных в `functions.py`, без необходимости оставлять код с данными в этом файле.&#10;&#10;Такой подход позволяет разделить данные и функциональность на разные файлы, что улучшает читаемость и поддерживаемость кода." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1702992900371" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="34e11e">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                  <option value="$PROJECT_DIR$/game/enemy/enemy_types.py" />
                </list>
              </option>
              <option name="id" value="34e11e" />
              <option name="initiateTms" value="1702993702979" />
              <option name="request" value="  File &quot;C:\Users\tereh\OneDrive\Рабочий стол\aaagame\game\functions.py&quot;, line 9, in scale_objects&#10;    enemy_type = enemies[0].enemy_type&#10;                 ~~~~~~~^^^&#10;IndexError: list index out of range" />
              <option name="response" value="" />
              <option name="responseDescription" value="Из ошибки, которую вы получили, можно сделать вывод, что список `enemies` пустой, поэтому вы не можете получить доступ к его элементам.&#10;&#10;Чтобы избежать этой ошибки, вам следует проверить, содержит ли список `enemies` хотя бы один элемент, прежде чем пытаться получить доступ к его элементам. Вы можете использовать условную проверку, чтобы убедиться, что список не пустой, прежде чем получать информацию о типе врага.&#10;&#10;Вот пример, как вы можете изменить функцию `scale_objects` для проверки наличия элементов в списке `enemies`:&#10;&#10;```python&#10;def scale_objects(size, enemies, enemy_size):&#10;    if enemies:&#10;        enemy_type = enemies[0].enemy_type&#10;        print(enemy_type)&#10;        # остальной код функции&#10;    else:&#10;        print(&quot;Список врагов пуст.&quot;)&#10;```&#10;&#10;В этом примере мы добавили условие `if enemies:`, которое проверяет, содержит ли список `enemies` хотя бы один элемент. Если список не пустой, мы получаем информацию о типе врага. Если список пустой, мы выводим сообщение о том, что список врагов пуст.&#10;&#10;Убедитесь, что перед вызовом функции `scale_objects` вы правильно передаете список `enemies` с объектами врагов." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1702993717513" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/game/enemy/enemy_types.py" />
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="479e4c">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
              <option name="id" value="479e4c" />
              <option name="initiateTms" value="1702993605259" />
              <option name="request" value="['__add__', '__class__', '__class_getitem__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getstate__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']&#10;как мне вытащить информацию о том какой это тип врага из такх методов" />
              <option name="response" value="" />
              <option name="responseDescription" value="Из списка методов, который вы получили, нет прямого способа узнать тип врага. Однако, если вы знаете, что объект `enemies` является экземпляром определенного класса, вы можете использовать функцию `type()` для определения типа объекта.&#10;&#10;Вот как вы можете использовать функцию `type()` для определения типа объекта `enemies`:&#10;&#10;```python&#10;enemy_type = type(enemies).__name__&#10;print(enemy_type)&#10;```&#10;&#10;Этот код выведет имя класса, к которому принадлежит объект `enemies`. Если объект `enemies` является экземпляром класса `EnemyType1`, то вывод будет `EnemyType1`. Если объект `enemies` является экземпляром класса `EnemyType2`, то вывод будет `EnemyType2`.&#10;&#10;Обратите внимание, что для использования этого подхода вам нужно знать, какой класс создает объект `enemies`. Если вы не знаете класс, то вам может потребоваться изучить код, чтобы определить, какой класс создает объект `enemies`." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1702993612642" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="9cd998">
          <value>
            <ChatHistoryModel>
              <option name="id" value="9cd998" />
              <option name="initiateTms" value="1702993597081" />
              <option name="isStopped" value="true" />
              <option name="request" value="как мне вытащить информацию о том какой это тип врага из такх методов " />
              <option name="response" value="" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="ba35ff">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
              <option name="id" value="ba35ff" />
              <option name="initiateTms" value="1702993185988" />
              <option name="request" value="как узнать все доступные методы print(enemies.____)" />
              <option name="response" value="" />
              <option name="responseDescription" value="Чтобы узнать все доступные методы для объекта `enemies`, вы можете использовать функцию `dir()`. Функция `dir()` возвращает список всех атрибутов и методов объекта.&#10;&#10;В вашем случае, чтобы узнать все доступные методы для объекта `enemies`, вы можете использовать следующий код:&#10;&#10;```python&#10;print(dir(enemies))&#10;```&#10;&#10;Этот код выведет список всех методов и атрибутов объекта `enemies`. Вы можете изучить этот список, чтобы узнать, какие методы доступны для использования с объектом `enemies`." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1702993191447" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="bbef5e">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                  <option value="$PROJECT_DIR$/game/enemy/enemy_types.py" />
                </list>
              </option>
              <option name="id" value="bbef5e" />
              <option name="initiateTms" value="1702992847450" />
              <option name="request" value="enemy_types = {&#10;    &quot;EnemyType1&quot;: {&#10;        &quot;size&quot;: 40,&#10;        &quot;speed&quot;: 5,&#10;        &quot;spawn_x&quot;: 1000,&#10;        &quot;spawn_y&quot;: 1000&#10;    },&#10;    &quot;EnemyType2&quot;: {&#10;        &quot;size&quot;: 20,&#10;        &quot;speed&quot;: 3,&#10;        &quot;spawn_x&quot;: 0,&#10;        &quot;spawn_y&quot;: 750&#10;    }&#10;}&#10;как лучше мне их хранить " />
              <option name="response" value="" />
              <option name="responseDescription" value="Ваш текущий подход к хранению типов врагов в словаре является довольно удобным и понятным. Он позволяет вам легко добавлять новые типы врагов и настраивать их параметры, такие как размер, скорость и координаты появления.&#10;&#10;Однако, если ваша игра будет иметь больше типов врагов или если вы планируете добавлять новые типы в будущем, может быть полезно рассмотреть альтернативные способы хранения данных. Некоторые из них включают использование базы данных, JSON-файлов или даже создание отдельного модуля для каждого типа врага.&#10;&#10;Вот несколько возможных вариантов:&#10;&#10;1. База данных: Вы можете использовать базу данных, такую как SQLite или MongoDB, для хранения информации о типах врагов. Это позволит вам легко добавлять, изменять и удалять типы врагов, а также выполнять сложные запросы к данным.&#10;&#10;2. JSON-файлы: Вы можете хранить информацию о типах врагов в отдельных JSON-файлах. Каждый файл будет содержать данные о конкретном типе врага. Это позволит вам легко добавлять и изменять типы врагов, а также делить информацию на более удобные для чтения и управления файлы.&#10;&#10;3. Отдельные модули: Вы можете создать отдельный модуль для каждого типа врага. Каждый модуль будет содержать класс, описывающий соответствующий тип врага, и его параметры. Это позволит вам легко добавлять новые типы врагов, а также иметь более структурированный и модульный подход к организации кода.&#10;&#10;Выбор способа хранения данных зависит от конкретных требований вашей игры и вашего предпочтения в организации кода. Рассмотрите эти варианты и выберите тот, который лучше всего соответствует вашим потребностям." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1702992860043" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/game/enemy/enemy_types.py" />
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
        <entry key="e45bb2">
          <value>
            <ChatHistoryModel>
              <option name="contextFilesPaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
              <option name="id" value="e45bb2" />
              <option name="initiateTms" value="1702993682612" />
              <option name="request" value="оно пишет что это список" />
              <option name="response" value="" />
              <option name="responseDescription" value="Из вашего списка методов видно, что объект `enemies` является списком. В этом случае, чтобы получить информацию о типе врага, вам нужно обратиться к элементу списка и использовать соответствующий атрибут или метод.&#10;&#10;Например, если каждый элемент списка `enemies` представляет собой объект врага, и у каждого объекта врага есть атрибут `enemy_type`, вы можете получить тип врага следующим образом:&#10;&#10;```python&#10;enemy_type = enemies[0].enemy_type&#10;print(enemy_type)&#10;```&#10;&#10;В этом примере мы предполагаем, что первый элемент списка `enemies` содержит информацию о типе врага. Если это не так, вам нужно будет указать правильный индекс элемента списка, который содержит информацию о типе врага.&#10;&#10;Обратите внимание, что для использования этого подхода вам нужно знать структуру объектов врагов в списке `enemies` и какие атрибуты или методы доступны для получения информации о типе врага." />
              <option name="responseFileName" value="" />
              <option name="responseFilePath" value="" />
              <option name="responseTms" value="1702993687352" />
              <option name="usedLocalFilePaths">
                <list>
                  <option value="$PROJECT_DIR$/game/functions.py" />
                </list>
              </option>
            </ChatHistoryModel>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/aaagame$events.coverage" NAME="events Coverage Results" MODIFIED="1702037928716" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/game/visual" />
    <SUITE FILE_PATH="coverage/aaagame$enemies_handler.coverage" NAME="enemies_handler Coverage Results" MODIFIED="1702038034989" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/game/enemy" />
    <SUITE FILE_PATH="coverage/aaagame$moin.coverage" NAME="moin Coverage Results" MODIFIED="1702802880362" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="C:\Users\tereh\OneDrive\Рабочий стол\aaagame" />
    <SUITE FILE_PATH="coverage/main_py$main.coverage" NAME="main Coverage Results" MODIFIED="1702807536326" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../Vampire_survivors-main" />
    <SUITE FILE_PATH="coverage/aaagame$player.coverage" NAME="player Coverage Results" MODIFIED="1702036455161" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/game" />
    <SUITE FILE_PATH="coverage/aaagame$main.coverage" NAME="main Coverage Results" MODIFIED="1702082233214" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/aaagame$game.coverage" NAME="game Coverage Results" MODIFIED="1702035795813" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/game" />
    <SUITE FILE_PATH="coverage/aaagame$enemies_spawning.coverage" NAME="enemies_spawning Coverage Results" MODIFIED="1702081629000" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/game/enemy" />
    <SUITE FILE_PATH="coverage/main_py$moin.coverage" NAME="moin Coverage Results" MODIFIED="1702994393487" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="C:\Users\tereh\OneDrive\Рабочий стол\aaagame" />
    <SUITE FILE_PATH="coverage/aaagame$button_events.coverage" NAME="button_events Coverage Results" MODIFIED="1702033983930" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/game" />
    <SUITE FILE_PATH="coverage/aaagame$render.coverage" NAME="render Coverage Results" MODIFIED="1702033575684" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/game" />
  </component>
</project>